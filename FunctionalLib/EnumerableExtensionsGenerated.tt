<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="Helpers.ttinclude" #>
<# OutputGeneratedCodeHeader(); #>

using System;
using System.Collections.Generic;

namespace PendleCodeMonkey.FunctionalLib
{
	/// <summary>
	/// Implementation of extension methods for IEnumerable.
	/// </summary>
	public static partial class EnumerableExtensions
	{
<#  for (var i = 2; i <= MaxCurryFuncArity(); i++) { #>
		public static IEnumerable<<#= CurriedFuncReturnType(i, except:1) #>> Map<<#= FuncTypes(i) #>>(this IEnumerable<T1> source, <#= FuncType(i) #> func)
			=> source.Map(func.Curry());
<# } #>
	}
}