<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ output extension=".cs" #>
<#@ include file="Helpers.ttinclude" #>
<# OutputGeneratedCodeHeader(); #>

using System;
using Unit = System.ValueTuple;

namespace PendleCodeMonkey.FunctionalLib
{
	using static FnLib;

	/// <summary>
	/// Implementation of extension methods for Action delegates.
	/// </summary>
	public static partial class ActionExtensions
	{
<#  for (var i = 1; i <= MaxActionExtArity(); i++) { #>
		public static <#= FuncType(i, resultTypeName: "Unit") #> ToUnitFunc<#= BracketedTypes(i) #>(this Action<#= BracketedTypes(i) #> action)
			=> (<#= Values(i) #>) => { action(<#= Values(i) #>); return Unit(); };
<# } #>
	}
}